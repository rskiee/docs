#define enA 5   // Enable1 L298 Pin enA

#define in1 6   // Motor1 L298 Pin in1

#define in2 7   // Motor1 L298 Pin in2

#define in3 8   // Motor2 L298 Pin in3

#define in4 9   // Motor2 L298 Pin in4

#define enB 10  // Enable2 L298 Pin enB

#define ir_R A0 // Flame Sensor Right

#define ir_F A1 // Flame Sensor Front

#define ir_L A2 // Flame Sensor Left

#define servoPin A4  // Servo Motor PWM pin

#define pumpPin A3   // Water Pump PWM pin


int Speed = 160; // Write The Duty Cycle 0 to 255 Enable for Motor Speed

int s1, s2, s3;


void setup() {

  Serial.begin(9600);  // start serial communication at 9600bps

  pinMode(ir_R, INPUT); // declare fire sensor pin as input

  pinMode(ir_F, INPUT); // declare fire sensor pin as input

  pinMode(ir_L, INPUT); // declare fire sensor pin as input

  pinMode(enA, OUTPUT); // declare as output for L298 Pin enA

  pinMode(in1, OUTPUT); // declare as output for L298 Pin in1

  pinMode(in2, OUTPUT); // declare as output for L298 Pin in2

  pinMode(in3, OUTPUT); // declare as output for L298 Pin in3

  pinMode(in4, OUTPUT); // declare as output for L298 Pin in4

  pinMode(enB, OUTPUT); // declare as output for L298 Pin enB

  pinMode(servoPin, OUTPUT);

  pinMode(pumpPin, OUTPUT);

  

  // Servo motor initial movement

  for (int angle = 90; angle <= 140; angle += 5) {

    servoPulse(servoPin, angle);

  }

  for (int angle = 140; angle >= 40; angle -= 5) {

    servoPulse(servoPin, angle);

  }

  for (int angle = 40; angle <= 95; angle += 5) {

    servoPulse(servoPin, angle);

  }

  

  analogWrite(enA, Speed); // Write The Duty Cycle 0 to 255 Enable Pin A for Motor1 Speed

  analogWrite(enB, Speed); // Write The Duty Cycle 0 to 255 Enable Pin B for Motor2 Speed

  delay(500);

}


void loop() {

  s1 = analogRead(ir_R);

  s2 = analogRead(ir_F);

  s3 = analogRead(ir_L);


  Serial.print(s1);

  Serial.print("\t");

  Serial.print(s2);

  Serial.print("\t");

  Serial.println(s3);

  delay(50);

  

  // Check if any of the fire sensors detect a fire

  if (s1 < 250 || s2 < 350 || s3 < 250) {

    // Stop the robot

    Stop();

    

    // Turn off the water pump

    digitalWrite(pumpPin, LOW);

    

    // Sweep the servo motor

    for (int angle = 90; angle <= 140; angle += 3) {

      servoPulse(servoPin, angle);

    }

    for (int angle = 140; angle >= 40; angle -= 3) {

      servoPulse(servoPin, angle);

    }

    for (int angle = 40; angle <= 90; angle += 3) {

      servoPulse(servoPin, angle);

    }

    

    // Move the robot towards the fire

    if (s1 < 250) {

      forword();

    } else if (s2 < 350) {

      forword();

    } else if (s3 < 250) {

      forword();

    }

    

    // Wait for the robot to reach the optimal position in front of the fire

    delay(5000);

    

    // Stop the robot when it reaches the optimal position

    Stop();

    

    // Activate the water pump for 5 seconds

    digitalWrite(pumpPin, HIGH);

    delay(5000);

    digitalWrite(pumpPin, LOW);

  }

  // If no fire is detected, move the robot based on the sensor readings

  else if (s1 >= 251 && s1 <= 700) {

    digitalWrite(pumpPin, LOW);

    backword();

    delay(100);

    turnRight();

    delay(200);

  }

  else if (s2 >= 251 && s2 <= 800) {

    digitalWrite(pumpPin, LOW);

    forword();

  }

  else if (s3 >= 251 && s3 <= 700) {

    digitalWrite(pumpPin, LOW);

    backword();

    delay(100);

    turnLeft();

    delay(200);

  }

  else {

    digitalWrite(pumpPin, LOW);

    Stop();

  }

  delay(10);

}


void servoPulse(int pin, int angle) {

  int pwm = (angle * 11) + 500; // Convert angle to microseconds

  digitalWrite(pin, HIGH);

  delayMicroseconds(pwm);

  digitalWrite(pin, LOW);

  delay(50); // Refresh cycle of servo

}


void forword() { // forword

  digitalWrite(in1, HIGH); // Right Motor forword Pin

  digitalWrite(in2, LOW);  // Right Motor backword Pin

  digitalWrite(in3, LOW);  // Left Motor backword Pin

  digitalWrite(in4, HIGH); // Left Motor forword Pin

}


void backword() { // backword

  digitalWrite(in1, LOW);  // Right Motor forword Pin

  digitalWrite(in2, HIGH); // Right Motor backword Pin

  digitalWrite(in3, HIGH); // Left Motor backword Pin

  digitalWrite(in4, LOW);  // Left Motor forword Pin

}


void turnRight() { // turnRight

  digitalWrite(in1, LOW);  // Right Motor forword Pin

  digitalWrite(in2, HIGH); // Right Motor backword Pin

  digitalWrite(in3, LOW);  // Left Motor backword Pin

  digitalWrite(in4, HIGH); // Left Motor forword Pin

}


void turnLeft() { // turnLeft

  digitalWrite(in1, HIGH); // Right Motor forword Pin

  digitalWrite(in2, LOW);  // Right Motor backword Pin

  digitalWrite(in3, HIGH); // Left Motor backward Pin

  digitalWrite(in4, LOW);  // Left Motor forword Pin

}


void Stop() { // stop

  digitalWrite(in1, LOW); // Right Motor forword Pin

  digitalWrite(in2, LOW); // Right Motor backword Pin

  digitalWrite(in3, LOW); // Left Motor backword Pin

  digitalWrite(in4, LOW); // Left Motor forword Pin

}
